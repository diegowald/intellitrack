//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.4455
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace IntelliTrack.Client.Application {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SIGDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SIGDataSet : global::System.Data.DataSet {
        
        private RegadoresViewDataTable tableRegadoresView;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SIGDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SIGDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RegadoresView"] != null)) {
                    base.Tables.Add(new RegadoresViewDataTable(ds.Tables["RegadoresView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RegadoresViewDataTable RegadoresView {
            get {
                return this.tableRegadoresView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SIGDataSet cln = ((SIGDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RegadoresView"] != null)) {
                    base.Tables.Add(new RegadoresViewDataTable(ds.Tables["RegadoresView"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRegadoresView = ((RegadoresViewDataTable)(base.Tables["RegadoresView"]));
            if ((initTable == true)) {
                if ((this.tableRegadoresView != null)) {
                    this.tableRegadoresView.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SIGDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SIGDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRegadoresView = new RegadoresViewDataTable();
            base.Tables.Add(this.tableRegadoresView);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRegadoresView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SIGDataSet ds = new SIGDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RegadoresViewRowChangeEventHandler(object sender, RegadoresViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RegadoresViewDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIDTransponder;
            
            private global::System.Data.DataColumn columnIDElemento;
            
            private global::System.Data.DataColumn columnCategoria;
            
            private global::System.Data.DataColumn columnEquipo;
            
            private global::System.Data.DataColumn columnDIA_HORA;
            
            private global::System.Data.DataColumn columnDIA_HORA_Final;
            
            private global::System.Data.DataColumn columnDuracion;
            
            private global::System.Data.DataColumn columnLatitud;
            
            private global::System.Data.DataColumn columnLongitud;
            
            private global::System.Data.DataColumn columnVelocidad;
            
            private global::System.Data.DataColumn columnCurso;
            
            private global::System.Data.DataColumn columnNOM_PUNTO;
            
            private global::System.Data.DataColumn columnNOM_CAMINO;
            
            private global::System.Data.DataColumn columnNOM_AREA;
            
            private global::System.Data.DataColumn columnNOM_FRENTE;
            
            private global::System.Data.DataColumn columnTAG_EQUIPO;
            
            private global::System.Data.DataColumn columnTRANSP_VOLT;
            
            private global::System.Data.DataColumn columnTRANSP_TEMP;
            
            private global::System.Data.DataColumn columnSENTIDO;
            
            private global::System.Data.DataColumn columnTiempoCarga;
            
            private global::System.Data.DataColumn columnTiempoDetenido;
            
            private global::System.Data.DataColumn columnTiempoTransito;
            
            private global::System.Data.DataColumn columnEstado;
            
            private global::System.Data.DataColumn columnVelocidadMaxima;
            
            private global::System.Data.DataColumn columnVelocidadPromedio;
            
            private global::System.Data.DataColumn columnReferenciaSalida;
            
            private global::System.Data.DataColumn columnReferenciaCaminos;
            
            private global::System.Data.DataColumn columnReferenciaLlegada;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegadoresViewDataTable() {
                this.TableName = "RegadoresView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RegadoresViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RegadoresViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDTransponderColumn {
                get {
                    return this.columnIDTransponder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDElementoColumn {
                get {
                    return this.columnIDElemento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoriaColumn {
                get {
                    return this.columnCategoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EquipoColumn {
                get {
                    return this.columnEquipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIA_HORAColumn {
                get {
                    return this.columnDIA_HORA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DIA_HORA_FinalColumn {
                get {
                    return this.columnDIA_HORA_Final;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DuracionColumn {
                get {
                    return this.columnDuracion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatitudColumn {
                get {
                    return this.columnLatitud;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongitudColumn {
                get {
                    return this.columnLongitud;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VelocidadColumn {
                get {
                    return this.columnVelocidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CursoColumn {
                get {
                    return this.columnCurso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOM_PUNTOColumn {
                get {
                    return this.columnNOM_PUNTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOM_CAMINOColumn {
                get {
                    return this.columnNOM_CAMINO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOM_AREAColumn {
                get {
                    return this.columnNOM_AREA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOM_FRENTEColumn {
                get {
                    return this.columnNOM_FRENTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAG_EQUIPOColumn {
                get {
                    return this.columnTAG_EQUIPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANSP_VOLTColumn {
                get {
                    return this.columnTRANSP_VOLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANSP_TEMPColumn {
                get {
                    return this.columnTRANSP_TEMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENTIDOColumn {
                get {
                    return this.columnSENTIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TiempoCargaColumn {
                get {
                    return this.columnTiempoCarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TiempoDetenidoColumn {
                get {
                    return this.columnTiempoDetenido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TiempoTransitoColumn {
                get {
                    return this.columnTiempoTransito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VelocidadMaximaColumn {
                get {
                    return this.columnVelocidadMaxima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VelocidadPromedioColumn {
                get {
                    return this.columnVelocidadPromedio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenciaSalidaColumn {
                get {
                    return this.columnReferenciaSalida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenciaCaminosColumn {
                get {
                    return this.columnReferenciaCaminos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenciaLlegadaColumn {
                get {
                    return this.columnReferenciaLlegada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegadoresViewRow this[int index] {
                get {
                    return ((RegadoresViewRow)(this.Rows[index]));
                }
            }
            
            public event RegadoresViewRowChangeEventHandler RegadoresViewRowChanging;
            
            public event RegadoresViewRowChangeEventHandler RegadoresViewRowChanged;
            
            public event RegadoresViewRowChangeEventHandler RegadoresViewRowDeleting;
            
            public event RegadoresViewRowChangeEventHandler RegadoresViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRegadoresViewRow(RegadoresViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegadoresViewRow AddRegadoresViewRow(
                        int ID, 
                        string IDTransponder, 
                        string IDElemento, 
                        int Categoria, 
                        string Equipo, 
                        System.DateTime DIA_HORA, 
                        System.DateTime DIA_HORA_Final, 
                        int Duracion, 
                        decimal Latitud, 
                        decimal Longitud, 
                        decimal Velocidad, 
                        decimal Curso, 
                        string NOM_PUNTO, 
                        string NOM_CAMINO, 
                        string NOM_AREA, 
                        string NOM_FRENTE, 
                        string TAG_EQUIPO, 
                        decimal TRANSP_VOLT, 
                        int TRANSP_TEMP, 
                        string SENTIDO, 
                        int TiempoCarga, 
                        int TiempoDetenido, 
                        int TiempoTransito, 
                        string Estado, 
                        decimal VelocidadMaxima, 
                        decimal VelocidadPromedio, 
                        string ReferenciaSalida, 
                        string ReferenciaCaminos, 
                        string ReferenciaLlegada) {
                RegadoresViewRow rowRegadoresViewRow = ((RegadoresViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IDTransponder,
                        IDElemento,
                        Categoria,
                        Equipo,
                        DIA_HORA,
                        DIA_HORA_Final,
                        Duracion,
                        Latitud,
                        Longitud,
                        Velocidad,
                        Curso,
                        NOM_PUNTO,
                        NOM_CAMINO,
                        NOM_AREA,
                        NOM_FRENTE,
                        TAG_EQUIPO,
                        TRANSP_VOLT,
                        TRANSP_TEMP,
                        SENTIDO,
                        TiempoCarga,
                        TiempoDetenido,
                        TiempoTransito,
                        Estado,
                        VelocidadMaxima,
                        VelocidadPromedio,
                        ReferenciaSalida,
                        ReferenciaCaminos,
                        ReferenciaLlegada};
                rowRegadoresViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRegadoresViewRow);
                return rowRegadoresViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RegadoresViewDataTable cln = ((RegadoresViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RegadoresViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDTransponder = base.Columns["IDTransponder"];
                this.columnIDElemento = base.Columns["IDElemento"];
                this.columnCategoria = base.Columns["Categoria"];
                this.columnEquipo = base.Columns["Equipo"];
                this.columnDIA_HORA = base.Columns["DIA_HORA"];
                this.columnDIA_HORA_Final = base.Columns["DIA_HORA_Final"];
                this.columnDuracion = base.Columns["Duracion"];
                this.columnLatitud = base.Columns["Latitud"];
                this.columnLongitud = base.Columns["Longitud"];
                this.columnVelocidad = base.Columns["Velocidad"];
                this.columnCurso = base.Columns["Curso"];
                this.columnNOM_PUNTO = base.Columns["NOM_PUNTO"];
                this.columnNOM_CAMINO = base.Columns["NOM_CAMINO"];
                this.columnNOM_AREA = base.Columns["NOM_AREA"];
                this.columnNOM_FRENTE = base.Columns["NOM_FRENTE"];
                this.columnTAG_EQUIPO = base.Columns["TAG_EQUIPO"];
                this.columnTRANSP_VOLT = base.Columns["TRANSP_VOLT"];
                this.columnTRANSP_TEMP = base.Columns["TRANSP_TEMP"];
                this.columnSENTIDO = base.Columns["SENTIDO"];
                this.columnTiempoCarga = base.Columns["TiempoCarga"];
                this.columnTiempoDetenido = base.Columns["TiempoDetenido"];
                this.columnTiempoTransito = base.Columns["TiempoTransito"];
                this.columnEstado = base.Columns["Estado"];
                this.columnVelocidadMaxima = base.Columns["VelocidadMaxima"];
                this.columnVelocidadPromedio = base.Columns["VelocidadPromedio"];
                this.columnReferenciaSalida = base.Columns["ReferenciaSalida"];
                this.columnReferenciaCaminos = base.Columns["ReferenciaCaminos"];
                this.columnReferenciaLlegada = base.Columns["ReferenciaLlegada"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDTransponder = new global::System.Data.DataColumn("IDTransponder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDTransponder);
                this.columnIDElemento = new global::System.Data.DataColumn("IDElemento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDElemento);
                this.columnCategoria = new global::System.Data.DataColumn("Categoria", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoria);
                this.columnEquipo = new global::System.Data.DataColumn("Equipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipo);
                this.columnDIA_HORA = new global::System.Data.DataColumn("DIA_HORA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HORA);
                this.columnDIA_HORA_Final = new global::System.Data.DataColumn("DIA_HORA_Final", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIA_HORA_Final);
                this.columnDuracion = new global::System.Data.DataColumn("Duracion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuracion);
                this.columnLatitud = new global::System.Data.DataColumn("Latitud", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitud);
                this.columnLongitud = new global::System.Data.DataColumn("Longitud", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitud);
                this.columnVelocidad = new global::System.Data.DataColumn("Velocidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVelocidad);
                this.columnCurso = new global::System.Data.DataColumn("Curso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurso);
                this.columnNOM_PUNTO = new global::System.Data.DataColumn("NOM_PUNTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM_PUNTO);
                this.columnNOM_CAMINO = new global::System.Data.DataColumn("NOM_CAMINO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM_CAMINO);
                this.columnNOM_AREA = new global::System.Data.DataColumn("NOM_AREA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM_AREA);
                this.columnNOM_FRENTE = new global::System.Data.DataColumn("NOM_FRENTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM_FRENTE);
                this.columnTAG_EQUIPO = new global::System.Data.DataColumn("TAG_EQUIPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAG_EQUIPO);
                this.columnTRANSP_VOLT = new global::System.Data.DataColumn("TRANSP_VOLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSP_VOLT);
                this.columnTRANSP_TEMP = new global::System.Data.DataColumn("TRANSP_TEMP", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSP_TEMP);
                this.columnSENTIDO = new global::System.Data.DataColumn("SENTIDO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENTIDO);
                this.columnTiempoCarga = new global::System.Data.DataColumn("TiempoCarga", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTiempoCarga);
                this.columnTiempoDetenido = new global::System.Data.DataColumn("TiempoDetenido", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTiempoDetenido);
                this.columnTiempoTransito = new global::System.Data.DataColumn("TiempoTransito", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTiempoTransito);
                this.columnEstado = new global::System.Data.DataColumn("Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstado);
                this.columnVelocidadMaxima = new global::System.Data.DataColumn("VelocidadMaxima", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVelocidadMaxima);
                this.columnVelocidadPromedio = new global::System.Data.DataColumn("VelocidadPromedio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVelocidadPromedio);
                this.columnReferenciaSalida = new global::System.Data.DataColumn("ReferenciaSalida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenciaSalida);
                this.columnReferenciaCaminos = new global::System.Data.DataColumn("ReferenciaCaminos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenciaCaminos);
                this.columnReferenciaLlegada = new global::System.Data.DataColumn("ReferenciaLlegada", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenciaLlegada);
                this.columnID.ReadOnly = true;
                this.columnIDTransponder.ReadOnly = true;
                this.columnIDTransponder.MaxLength = 3;
                this.columnIDElemento.ReadOnly = true;
                this.columnIDElemento.MaxLength = 3;
                this.columnCategoria.ReadOnly = true;
                this.columnEquipo.ReadOnly = true;
                this.columnEquipo.MaxLength = 3;
                this.columnDIA_HORA.ReadOnly = true;
                this.columnDIA_HORA_Final.ReadOnly = true;
                this.columnDuracion.ReadOnly = true;
                this.columnLatitud.ReadOnly = true;
                this.columnLongitud.ReadOnly = true;
                this.columnVelocidad.ReadOnly = true;
                this.columnCurso.ReadOnly = true;
                this.columnNOM_PUNTO.ReadOnly = true;
                this.columnNOM_PUNTO.MaxLength = 3;
                this.columnNOM_CAMINO.ReadOnly = true;
                this.columnNOM_CAMINO.MaxLength = 3;
                this.columnNOM_AREA.ReadOnly = true;
                this.columnNOM_AREA.MaxLength = 3;
                this.columnNOM_FRENTE.ReadOnly = true;
                this.columnNOM_FRENTE.MaxLength = 3;
                this.columnTAG_EQUIPO.ReadOnly = true;
                this.columnTAG_EQUIPO.MaxLength = 3;
                this.columnTRANSP_VOLT.ReadOnly = true;
                this.columnTRANSP_TEMP.ReadOnly = true;
                this.columnSENTIDO.ReadOnly = true;
                this.columnSENTIDO.MaxLength = 1;
                this.columnTiempoCarga.ReadOnly = true;
                this.columnTiempoDetenido.ReadOnly = true;
                this.columnTiempoTransito.ReadOnly = true;
                this.columnEstado.ReadOnly = true;
                this.columnEstado.MaxLength = 8;
                this.columnVelocidadMaxima.ReadOnly = true;
                this.columnVelocidadPromedio.ReadOnly = true;
                this.columnReferenciaSalida.ReadOnly = true;
                this.columnReferenciaSalida.MaxLength = 3;
                this.columnReferenciaCaminos.ReadOnly = true;
                this.columnReferenciaCaminos.MaxLength = 3;
                this.columnReferenciaLlegada.ReadOnly = true;
                this.columnReferenciaLlegada.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegadoresViewRow NewRegadoresViewRow() {
                return ((RegadoresViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RegadoresViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RegadoresViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RegadoresViewRowChanged != null)) {
                    this.RegadoresViewRowChanged(this, new RegadoresViewRowChangeEvent(((RegadoresViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RegadoresViewRowChanging != null)) {
                    this.RegadoresViewRowChanging(this, new RegadoresViewRowChangeEvent(((RegadoresViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RegadoresViewRowDeleted != null)) {
                    this.RegadoresViewRowDeleted(this, new RegadoresViewRowChangeEvent(((RegadoresViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RegadoresViewRowDeleting != null)) {
                    this.RegadoresViewRowDeleting(this, new RegadoresViewRowChangeEvent(((RegadoresViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRegadoresViewRow(RegadoresViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SIGDataSet ds = new SIGDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RegadoresViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RegadoresViewRow : global::System.Data.DataRow {
            
            private RegadoresViewDataTable tableRegadoresView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RegadoresViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRegadoresView = ((RegadoresViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ID\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDTransponder {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.IDTransponderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IDTransponder\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.IDTransponderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IDElemento {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.IDElementoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IDElemento\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.IDElementoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Categoria {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.CategoriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Categoria\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.CategoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Equipo {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.EquipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Equipo\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.EquipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DIA_HORA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRegadoresView.DIA_HORAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIA_HORA\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.DIA_HORAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DIA_HORA_Final {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRegadoresView.DIA_HORA_FinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIA_HORA_Final\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.DIA_HORA_FinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Duracion {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.DuracionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Duracion\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.DuracionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Latitud {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.LatitudColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Latitud\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.LatitudColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Longitud {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.LongitudColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Longitud\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.LongitudColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Velocidad {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.VelocidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Velocidad\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.VelocidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Curso {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.CursoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Curso\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.CursoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOM_PUNTO {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.NOM_PUNTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOM_PUNTO\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.NOM_PUNTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOM_CAMINO {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.NOM_CAMINOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOM_CAMINO\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.NOM_CAMINOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOM_AREA {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.NOM_AREAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOM_AREA\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.NOM_AREAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOM_FRENTE {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.NOM_FRENTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOM_FRENTE\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.NOM_FRENTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAG_EQUIPO {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.TAG_EQUIPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TAG_EQUIPO\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.TAG_EQUIPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRANSP_VOLT {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.TRANSP_VOLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TRANSP_VOLT\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.TRANSP_VOLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TRANSP_TEMP {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.TRANSP_TEMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TRANSP_TEMP\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.TRANSP_TEMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENTIDO {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.SENTIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'SENTIDO\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.SENTIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TiempoCarga {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.TiempoCargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TiempoCarga\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.TiempoCargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TiempoDetenido {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.TiempoDetenidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TiempoDetenido\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.TiempoDetenidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TiempoTransito {
                get {
                    try {
                        return ((int)(this[this.tableRegadoresView.TiempoTransitoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TiempoTransito\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.TiempoTransitoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Estado {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.EstadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Estado\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VelocidadMaxima {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.VelocidadMaximaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VelocidadMaxima\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.VelocidadMaximaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VelocidadPromedio {
                get {
                    try {
                        return ((decimal)(this[this.tableRegadoresView.VelocidadPromedioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VelocidadPromedio\' de la tabla \'RegadoresView\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.VelocidadPromedioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenciaSalida {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.ReferenciaSalidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ReferenciaSalida\' de la tabla \'RegadoresView\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.ReferenciaSalidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenciaCaminos {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.ReferenciaCaminosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ReferenciaCaminos\' de la tabla \'RegadoresView\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.ReferenciaCaminosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenciaLlegada {
                get {
                    try {
                        return ((string)(this[this.tableRegadoresView.ReferenciaLlegadaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'ReferenciaLlegada\' de la tabla \'RegadoresView\' es DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableRegadoresView.ReferenciaLlegadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableRegadoresView.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableRegadoresView.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDTransponderNull() {
                return this.IsNull(this.tableRegadoresView.IDTransponderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDTransponderNull() {
                this[this.tableRegadoresView.IDTransponderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDElementoNull() {
                return this.IsNull(this.tableRegadoresView.IDElementoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDElementoNull() {
                this[this.tableRegadoresView.IDElementoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoriaNull() {
                return this.IsNull(this.tableRegadoresView.CategoriaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoriaNull() {
                this[this.tableRegadoresView.CategoriaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEquipoNull() {
                return this.IsNull(this.tableRegadoresView.EquipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEquipoNull() {
                this[this.tableRegadoresView.EquipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HORANull() {
                return this.IsNull(this.tableRegadoresView.DIA_HORAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HORANull() {
                this[this.tableRegadoresView.DIA_HORAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIA_HORA_FinalNull() {
                return this.IsNull(this.tableRegadoresView.DIA_HORA_FinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIA_HORA_FinalNull() {
                this[this.tableRegadoresView.DIA_HORA_FinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDuracionNull() {
                return this.IsNull(this.tableRegadoresView.DuracionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDuracionNull() {
                this[this.tableRegadoresView.DuracionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudNull() {
                return this.IsNull(this.tableRegadoresView.LatitudColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudNull() {
                this[this.tableRegadoresView.LatitudColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudNull() {
                return this.IsNull(this.tableRegadoresView.LongitudColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudNull() {
                this[this.tableRegadoresView.LongitudColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVelocidadNull() {
                return this.IsNull(this.tableRegadoresView.VelocidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVelocidadNull() {
                this[this.tableRegadoresView.VelocidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCursoNull() {
                return this.IsNull(this.tableRegadoresView.CursoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCursoNull() {
                this[this.tableRegadoresView.CursoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOM_PUNTONull() {
                return this.IsNull(this.tableRegadoresView.NOM_PUNTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOM_PUNTONull() {
                this[this.tableRegadoresView.NOM_PUNTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOM_CAMINONull() {
                return this.IsNull(this.tableRegadoresView.NOM_CAMINOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOM_CAMINONull() {
                this[this.tableRegadoresView.NOM_CAMINOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOM_AREANull() {
                return this.IsNull(this.tableRegadoresView.NOM_AREAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOM_AREANull() {
                this[this.tableRegadoresView.NOM_AREAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOM_FRENTENull() {
                return this.IsNull(this.tableRegadoresView.NOM_FRENTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOM_FRENTENull() {
                this[this.tableRegadoresView.NOM_FRENTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAG_EQUIPONull() {
                return this.IsNull(this.tableRegadoresView.TAG_EQUIPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAG_EQUIPONull() {
                this[this.tableRegadoresView.TAG_EQUIPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSP_VOLTNull() {
                return this.IsNull(this.tableRegadoresView.TRANSP_VOLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSP_VOLTNull() {
                this[this.tableRegadoresView.TRANSP_VOLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANSP_TEMPNull() {
                return this.IsNull(this.tableRegadoresView.TRANSP_TEMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANSP_TEMPNull() {
                this[this.tableRegadoresView.TRANSP_TEMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENTIDONull() {
                return this.IsNull(this.tableRegadoresView.SENTIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENTIDONull() {
                this[this.tableRegadoresView.SENTIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTiempoCargaNull() {
                return this.IsNull(this.tableRegadoresView.TiempoCargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTiempoCargaNull() {
                this[this.tableRegadoresView.TiempoCargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTiempoDetenidoNull() {
                return this.IsNull(this.tableRegadoresView.TiempoDetenidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTiempoDetenidoNull() {
                this[this.tableRegadoresView.TiempoDetenidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTiempoTransitoNull() {
                return this.IsNull(this.tableRegadoresView.TiempoTransitoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTiempoTransitoNull() {
                this[this.tableRegadoresView.TiempoTransitoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstadoNull() {
                return this.IsNull(this.tableRegadoresView.EstadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstadoNull() {
                this[this.tableRegadoresView.EstadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVelocidadMaximaNull() {
                return this.IsNull(this.tableRegadoresView.VelocidadMaximaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVelocidadMaximaNull() {
                this[this.tableRegadoresView.VelocidadMaximaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVelocidadPromedioNull() {
                return this.IsNull(this.tableRegadoresView.VelocidadPromedioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVelocidadPromedioNull() {
                this[this.tableRegadoresView.VelocidadPromedioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenciaSalidaNull() {
                return this.IsNull(this.tableRegadoresView.ReferenciaSalidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenciaSalidaNull() {
                this[this.tableRegadoresView.ReferenciaSalidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenciaCaminosNull() {
                return this.IsNull(this.tableRegadoresView.ReferenciaCaminosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenciaCaminosNull() {
                this[this.tableRegadoresView.ReferenciaCaminosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenciaLlegadaNull() {
                return this.IsNull(this.tableRegadoresView.ReferenciaLlegadaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenciaLlegadaNull() {
                this[this.tableRegadoresView.ReferenciaLlegadaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RegadoresViewRowChangeEvent : global::System.EventArgs {
            
            private RegadoresViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegadoresViewRowChangeEvent(RegadoresViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RegadoresViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace IntelliTrack.Client.Application.SIGDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RegadoresViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RegadoresViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RegadoresView";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("IDTransponder", "IDTransponder");
            tableMapping.ColumnMappings.Add("IDElemento", "IDElemento");
            tableMapping.ColumnMappings.Add("Categoria", "Categoria");
            tableMapping.ColumnMappings.Add("Equipo", "Equipo");
            tableMapping.ColumnMappings.Add("DIA_HORA", "DIA_HORA");
            tableMapping.ColumnMappings.Add("DIA_HORA_Final", "DIA_HORA_Final");
            tableMapping.ColumnMappings.Add("Duracion", "Duracion");
            tableMapping.ColumnMappings.Add("Latitud", "Latitud");
            tableMapping.ColumnMappings.Add("Longitud", "Longitud");
            tableMapping.ColumnMappings.Add("Velocidad", "Velocidad");
            tableMapping.ColumnMappings.Add("Curso", "Curso");
            tableMapping.ColumnMappings.Add("NOM_PUNTO", "NOM_PUNTO");
            tableMapping.ColumnMappings.Add("NOM_CAMINO", "NOM_CAMINO");
            tableMapping.ColumnMappings.Add("NOM_AREA", "NOM_AREA");
            tableMapping.ColumnMappings.Add("NOM_FRENTE", "NOM_FRENTE");
            tableMapping.ColumnMappings.Add("TAG_EQUIPO", "TAG_EQUIPO");
            tableMapping.ColumnMappings.Add("TRANSP_VOLT", "TRANSP_VOLT");
            tableMapping.ColumnMappings.Add("TRANSP_TEMP", "TRANSP_TEMP");
            tableMapping.ColumnMappings.Add("SENTIDO", "SENTIDO");
            tableMapping.ColumnMappings.Add("TiempoCarga", "TiempoCarga");
            tableMapping.ColumnMappings.Add("TiempoDetenido", "TiempoDetenido");
            tableMapping.ColumnMappings.Add("TiempoTransito", "TiempoTransito");
            tableMapping.ColumnMappings.Add("Estado", "Estado");
            tableMapping.ColumnMappings.Add("VelocidadMaxima", "VelocidadMaxima");
            tableMapping.ColumnMappings.Add("VelocidadPromedio", "VelocidadPromedio");
            tableMapping.ColumnMappings.Add("ReferenciaSalida", "ReferenciaSalida");
            tableMapping.ColumnMappings.Add("ReferenciaCaminos", "ReferenciaCaminos");
            tableMapping.ColumnMappings.Add("ReferenciaLlegada", "ReferenciaLlegada");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::IntelliTrack.Client.Application.Properties.Settings.Default.SIGConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, IDTransponder, IDElemento, Categoria, Equipo, DIA_HORA, DIA_HORA_Final, Duracion, Latitud, Longitud, Velocidad, Curso, NOM_PUNTO, NOM_CAMINO, NOM_AREA, NOM_FRENTE, TAG_EQUIPO, TRANSP_VOLT, TRANSP_TEMP, SENTIDO, TiempoCarga, TiempoDetenido, TiempoTransito, Estado, VelocidadMaxima, VelocidadPromedio, ReferenciaSalida, ReferenciaCaminos, ReferenciaLlegada FROM dbo.RegadoresView";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SIGDataSet.RegadoresViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SIGDataSet.RegadoresViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SIGDataSet.RegadoresViewDataTable dataTable = new SIGDataSet.RegadoresViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591